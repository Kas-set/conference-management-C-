// <auto-generated />
using System;
using EntityFrameworkCoreMySQL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EntityFrameworkCoreMySQL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("EntityFrameworkCoreMySQL.Models.Article", b =>
                {
                    b.Property<int>("IdArticle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_article");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdArticle"));

                    b.Property<int>("ConferenceId")
                        .HasColumnType("int")
                        .HasColumnName("ConferenceId");

                    b.Property<string>("descArticle")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("descArticle");

                    b.Property<byte[]>("pdfContenu")
                        .IsRequired()
                        .HasColumnType("longblob")
                        .HasColumnName("pdfContenu");

                    b.Property<string>("pdfName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("pdfName");

                    b.Property<string>("statutArt")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("statut");

                    b.Property<string>("titreArticle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("titre_article");

                    b.HasKey("IdArticle");

                    b.HasIndex("ConferenceId");

                    b.ToTable("article");
                });

            modelBuilder.Entity("EntityFrameworkCoreMySQL.Models.Conference", b =>
                {
                    b.Property<int>("IdConf")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idConf");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdConf"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("Date");

                    b.Property<DateTime>("interResulEnd")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("interResulEnd");

                    b.Property<DateTime>("interResulStart")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("interResulStart");

                    b.Property<DateTime>("interSoumEnd")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("interSoumEnd");

                    b.Property<DateTime>("interSoumStart")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("interSoumStart");

                    b.Property<DateTime>("interinscEnd")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("interinscEnd");

                    b.Property<DateTime>("interinscStart")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("interinscStart");

                    b.Property<string>("themeConf")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("themeConf");

                    b.HasKey("IdConf");

                    b.ToTable("conference");
                });

            modelBuilder.Entity("EntityFrameworkCoreMySQL.Models.Utilisateur", b =>
                {
                    b.Property<int>("Id_util")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_util");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_util"));

                    b.Property<string>("Email_util")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email_util");

                    b.Property<string>("Mot_de_passe")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("mot_de_passe");

                    b.Property<string>("Nom_util")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nom_util");

                    b.HasKey("Id_util");

                    b.ToTable("utilisateur");
                });

            modelBuilder.Entity("EntityFrameworkCoreMySQL.Models.Article", b =>
                {
                    b.HasOne("EntityFrameworkCoreMySQL.Models.Conference", "Conference")
                        .WithMany("Articles")
                        .HasForeignKey("ConferenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conference");
                });

            modelBuilder.Entity("EntityFrameworkCoreMySQL.Models.Conference", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}
